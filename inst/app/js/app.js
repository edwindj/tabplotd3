// Generated by CoffeeScript 1.3.3

/*
*/


(function() {
  var catColumn, numColumn, _base, _ref, _ref1;

  if ((_ref = this.tp) == null) {
    this.tp = {};
  }

  if ((_ref1 = (_base = this.tp).settings) == null) {
    _base.settings = {};
  }

  tp.tableplot = function() {
    var colScale, height, margin, tableplot, width, x, y;
    margin = {
      top: 0,
      bottom: 0,
      left: 60,
      right: 0
    };
    width = 800;
    height = 600;
    x = d3.scale.linear().domain([0, 1]);
    y = d3.scale.ordinal();
    colScale = d3.scale.linear().domain([0, 1]).range(["white", "steelblue"]);
    tableplot = {};
    tableplot.width = function(w) {
      if (w != null) {
        width = w;
        return tableplot;
      } else {
        return width;
      }
    };
    tableplot.height = function(h) {
      if (h != null) {
        height = h;
        return tableplot;
      } else {
        return height;
      }
    };
    tableplot.draw = function(data) {
      var cols, h, k, v, vars, vis, w, _ref2;
      w = width - (margin.left + margin.right);
      h = height - (margin.top + margin.bottom);
      x = x.range([0, w]);
      y = y.domain(d3.range(data.nBins)).rangeBands([0, h]);
      vars = d3.keys(data.vars);
      vis = d3.select("#vis");
      cols = vis.selectAll("g.column").data(data);
      cols.enter().append("g").classed("column", true).attr("transform", function(d, i) {
        return "translate(" + (y(i)) + ")";
      }).append("rect");
      cols.exit().remove();
      _ref2 = data.vars;
      for (k in _ref2) {
        v = _ref2[k];
        if (v.mean != null) {
          numColumn(v);
        } else {
          catColumn(v);
        }
      }
    };
    return tableplot;
  };

  numColumn = function(data, xScale, yScale) {};

  catColumn = function(data, xScale, yScale) {};

  this.draw = function(data) {
    return tp.tableplot().draw(data);
  };

}).call(this);
